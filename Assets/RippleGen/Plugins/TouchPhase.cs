// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

using UnityEngine;

using RippleGen.Extends;

namespace RippleGen.Plugins
{
    public class TouchControl : RippleGen.Core.Plugin
    {
        public List<Action<Vector2>> OnDrag = new List<Action<Vector2>>();
        public List<Action<float>> OnScroll = new List<Action<float>>();

        public TouchControl()
        {
        }
        
        enum ControlStatus {
            NoControl,
            Drag,
            Scroll
        }

        ControlStatus controlStatus;
        Vector2 oldDragPos;
        float oldDis;
        public override void Update()
        {
            base.Update();
            
            Vector2 dragOff = Vector2.zero;
            float scrollDelta = 0;
            if (Application.platform == RuntimePlatform.IPhonePlayer ||
                Application.platform == RuntimePlatform.Android) {
                if (Input.touchCount == 1) {
                    if (controlStatus != ControlStatus.Drag) {
                        controlStatus = ControlStatus.Drag;
                        oldDragPos = Input.GetTouch(0).position;
                    }else if (controlStatus == ControlStatus.Drag) {
                        dragOff = Input.GetTouch(0).position - oldDragPos;
                        oldDragPos = Input.GetTouch(0).position;
                    }
                }else if (Input.touchCount == 2) {
                    if (controlStatus != ControlStatus.Scroll) {
                        controlStatus = ControlStatus.Scroll;
                        oldDis = Vector2.Distance(Input.GetTouch(0).position, Input.GetTouch(1).position);
                    }else if (controlStatus == ControlStatus.Scroll) {
                        float dis = Vector2.Distance(Input.GetTouch(0).position, Input.GetTouch(1).position);
                        scrollDelta = oldDis - dis;
                        oldDis = dis;
                    }
                }else {
                    controlStatus = ControlStatus.NoControl;
                }
            }else {
                if (Input.GetMouseButtonDown(0)) {
                    controlStatus = ControlStatus.Drag;
                    oldDragPos = new Vector2(Input.mousePosition.x, Input.mousePosition.y);
                }else if (Input.GetMouseButtonUp(0)) {
                    controlStatus = ControlStatus.NoControl;
                }else if (controlStatus == ControlStatus.Drag) {
                    dragOff.x = Input.mousePosition.x - oldDragPos.x;
                    dragOff.y = Input.mousePosition.y - oldDragPos.y;
                    oldDragPos = new Vector2(Input.mousePosition.x, Input.mousePosition.y);
                }

                float mouseWheel = Input.GetAxis("Mouse ScrollWheel");
                if (mouseWheel != 0) {
                    controlStatus = ControlStatus.Scroll;
                    scrollDelta = mouseWheel;
                }
            }

            if (dragOff != Vector2.zero) {
                OnDrag.InvokeActions<Vector2>(dragOff);
            }else if (scrollDelta != 0) {
                OnScroll.InvokeActions<float>(scrollDelta);
            }
        }
    }
}

